Microchip MPLAB XC8 Compiler V1.36 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.36\dat\en_msgs.txt -cs \
  -h+dist/XC8_18F87K22/production\Rover.X.production.sym \
  --cmf=dist/XC8_18F87K22/production\Rover.X.production.cmf -z -Q18F45K20 \
  -oC:\Users\jorge\AppData\Local\Temp\s7as.2 \
  -Mdist/XC8_18F87K22/production/Rover.X.production.map -E1 -ver=XC8 \
  -ASTACK=0A0h-05ffh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0600h-06FFhx122 -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-05FFh -ABIGRAM=01h-05FFh -ARAM=060h-0FFh,0100h-01FFhx5 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0600h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\jorge\AppData\Local\Temp\s7as.obj \
  dist/XC8_18F87K22/production\Rover.X.production.obj 

Object code version is 3.11

Machine type is 18F45K20

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\jorge\AppData\Local\Temp\s7as.obj
                end_init                             E2       E2        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/XC8_18F87K22/production\Rover.X.production.obj
                intcode                               8        8       DA        4       0
                temp                                 2B       2B        1        1       1
                smallconst                          600      600       10      300       0
                text15                              9BC      9BC        A      308       0
                text14                              9B2      9B2        A      308       0
                text12                              7EC      7EC       40      308       0
                text11                              7AC      7AC       40      308       0
                text10                              69E      69E       7C      308       0
                text9                               610      610       8E      308       0
                text8                               9C6      9C6        6      308       0
                text7                               71A      71A       52      308       0
                text6                               942      942       2A      308       0
                text5                               96C      96C       28      308       0
                text4                               8DE      8DE       3A      308       0
                text3                               918      918       2A      308       0
                text2                               8A4      8A4       3A      308       0
                text1                               994      994       1E      308       0
                text0                               82C      82C       3E      308       0
                cstackCOMRAM                          1        1       1B        1       1
                dataBANK0                            60       60       40       60       1
                bssCOMRAM                            1C       1C        F        1       1
                cinit                               86A      86A       3A      308       0
                idataBANK0                          76C      76C       40      308       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             E2       E2        4         0
                intcode                               8        8       DA         0
                reset_vec                             0        0        4         0
                text15                              9BC      9BC        A         0
                text14                              9B2      9B2        A         0
                text12                              7EC      7EC       40         0
                text11                              7AC      7AC       40         0
                text10                              69E      69E       7C         0
                text9                               610      610       8E         0
                text8                               9C6      9C6        6         0
                text7                               71A      71A       52         0
                text6                               942      942       2A         0
                text5                               96C      96C       28         0
                text4                               8DE      8DE       3A         0
                text3                               918      918       2A         0
                text2                               8A4      8A4       3A         0
                text1                               994      994       1E         0
                text0                               82C      82C       3E         0
                cinit                               86A      86A       3A         0
                idataBANK0                          76C      76C       40         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       10         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 2B       2B        1         1
                cstackCOMRAM                          1        1       1B         1
                bssCOMRAM                            1C       1C        F         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                dataBANK0                            60       60       40         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00002B  00002C         1       1  COMRAM  
                intcode                        000008  0000DE  0000E6         4       0  CODE    
                dataBANK0                      000060  000040  0000A0        60       1  BANK0   
                smallconst                     000600  000010  000610       300       0  SMALLCON
                text9                          000610  0003BC  0009CC       308       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000A0-0000FF               60
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           00002C-00005F               34
                         0000A0-0005FF              560
        CODE             000004-000007                4
                         0000E6-0005FF              51A
                         0009CC-007FFF             7634
        COMRAM           00002C-00005F               34
        CONST            000004-000007                4
                         0000E6-0005FF              51A
                         0009CC-007FFF             7634
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      0009CC-007FFF             7634
        RAM              0000A0-0005FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       0009CC-007FFF              100
        STACK            0000A0-0005FF              560

                                  Symbol Table

?_ReadPWMMotorLeft          cstackCOMRAM 000001
?_ReadPWMMotorRight         cstackCOMRAM 000001
?___lwdiv                   cstackCOMRAM 000011
?_abs                       cstackCOMRAM 000011
LCDBusyLoop@busy            cstackCOMRAM 000011
LCDBusyLoop@status          cstackCOMRAM 000013
LCDBusyLoop@temp            cstackCOMRAM 000012
LCDByte@c                   cstackCOMRAM 000017
LCDByte@hn                  cstackCOMRAM 000015
LCDByte@isdata              cstackCOMRAM 000014
LCDByte@ln                  cstackCOMRAM 000016
LCDByte@temp                cstackCOMRAM 000018
LCDInit@__i                 cstackCOMRAM 00001B
LCDInit@style               cstackCOMRAM 00001A
LCDWriteInt@F3445           bssCOMRAM    00001C
LCDWriteString@cc           cstackCOMRAM 00001B
LCDWriteString@msg          cstackCOMRAM 000019
SetMotorLeft@speed          cstackCOMRAM 00001A
SetMotorRight@speed         cstackCOMRAM 00001A
SetPWMMotorLeft@percentage  cstackCOMRAM 000018
SetPWMMotorRight@percentage cstackCOMRAM 000018
_ADCON1                     (abs)        000FC1
_ADCON2                     (abs)        000FC0
_ADIE                       (abs)        007CEE
_ADIF                       (abs)        007CF6
_ADON                       (abs)        007E10
_ADRESH                     (abs)        000FC4
_ADRESL                     (abs)        000FC3
_ANS0                       (abs)        007BF0
_ANS1                       (abs)        007BF1
_ANS2                       (abs)        007BF2
_ANS3                       (abs)        007BF3
_GIE                        (abs)        007F97
_GO                         (abs)        007E11
_LCDBusyLoop                text12       0007EC
_LCDByte                    text11       0007AC
_LCDInit                    text10       00069E
_LCDWriteString             text9        000610
_MotorInit                  text8        0009C6
_PEIE                       (abs)        007F96
_PORTD                      (abs)        000F83
_PSA                        (abs)        007EAB
_PWMLeft                    bssCOMRAM    000021
_PWMRight                   bssCOMRAM    000023
_RC0                        (abs)        007C10
_RC1                        (abs)        007C11
_RC2                        (abs)        007C12
_RC3                        (abs)        007C13
_RC4                        (abs)        007C14
_RC5                        (abs)        007C15
_RD4                        (abs)        007C1C
_RD5                        (abs)        007C1D
_RD6                        (abs)        007C1E
_ReadPWMMotorLeft           text15       0009BC
_ReadPWMMotorRight          text14       0009B2
_SetMotorLeft               text4        0008DE
_SetMotorRight              text2        0008A4
_SetPWMMotorLeft            text6        000942
_SetPWMMotorRight           text3        000918
_T08BIT                     (abs)        007EAE
_T0CS                       (abs)        007EAD
_T0PS0                      (abs)        007EA8
_T0PS1                      (abs)        007EA9
_T0PS2                      (abs)        007EAA
_TMR0H                      (abs)        000FD7
_TMR0IE                     (abs)        007F95
_TMR0IF                     (abs)        007F92
_TMR0L                      (abs)        000FD6
_TMR0ON                     (abs)        007EAF
_TRISA0                     (abs)        007C90
_TRISA1                     (abs)        007C91
_TRISA2                     (abs)        007C92
_TRISA3                     (abs)        007C93
_TRISC                      (abs)        000F94
_TRISD                      (abs)        000F95
_TRISDbits                  (abs)        000F95
_TimerPWMInit               text1        000994
__CFG_BOREN$SBORDIS         (abs)        000000
__CFG_BORV$18               (abs)        000000
__CFG_CCP2MX$PORTC          (abs)        000000
__CFG_CP0$OFF               (abs)        000000
__CFG_CP1$OFF               (abs)        000000
__CFG_CP2$OFF               (abs)        000000
__CFG_CP3$OFF               (abs)        000000
__CFG_CPB$OFF               (abs)        000000
__CFG_CPD$OFF               (abs)        000000
__CFG_EBTR0$OFF             (abs)        000000
__CFG_EBTR1$OFF             (abs)        000000
__CFG_EBTR2$OFF             (abs)        000000
__CFG_EBTR3$OFF             (abs)        000000
__CFG_EBTRB$OFF             (abs)        000000
__CFG_FCMEN$OFF             (abs)        000000
__CFG_FOSC$INTIO67          (abs)        000000
__CFG_HFOFST$ON             (abs)        000000
__CFG_IESO$OFF              (abs)        000000
__CFG_LPT1OSC$OFF           (abs)        000000
__CFG_LVP$OFF               (abs)        000000
__CFG_MCLRE$ON              (abs)        000000
__CFG_PBADEN$ON             (abs)        000000
__CFG_PWRT$OFF              (abs)        000000
__CFG_STVREN$ON             (abs)        000000
__CFG_WDTEN$OFF             (abs)        000000
__CFG_WDTPS$32768           (abs)        000000
__CFG_WRT0$OFF              (abs)        000000
__CFG_WRT1$OFF              (abs)        000000
__CFG_WRT2$OFF              (abs)        000000
__CFG_WRT3$OFF              (abs)        000000
__CFG_WRTB$OFF              (abs)        000000
__CFG_WRTC$OFF              (abs)        000000
__CFG_WRTD$OFF              (abs)        000000
__CFG_XINST$OFF             (abs)        000000
__HRAM                      (abs)        000000
__Habs1                     abs1         000000
__Hbank0                    bank0        000000
__Hbank1                    bank1        000000
__Hbank2                    bank2        000000
__Hbank3                    bank3        000000
__Hbank4                    bank4        000000
__Hbank5                    bank5        000000
__Hbigbss                   bigbss       000000
__Hbigdata                  bigdata      000000
__Hbigram                   bigram       000000
__Hbss                      bss          000000
__HbssCOMRAM                bssCOMRAM    000000
__Hcinit                    cinit        000000
__Hclrtext                  clrtext      000000
__Hcomram                   comram       000000
__Hconfig                   config       30000E
__Hconst                    const        000000
__HcstackCOMRAM             cstackCOMRAM 000000
__Hdata                     data         000000
__HdataBANK0                dataBANK0    000000
__Heeprom_data              eeprom_data  000000
__Hend_init                 end_init     0000E6
__Hfarbss                   farbss       000000
__Hfardata                  fardata      000000
__Hibigdata                 ibigdata     000000
__Hidata                    idata        000000
__HidataBANK0               idataBANK0   000000
__Hidloc                    idloc        200008
__Hifardata                 ifardata     000000
__Hinit                     init         0000E2
__Hintcode                  intcode      0000E2
__Hintcode_body             intcode_body 000000
__Hintcodelo                intcodelo    0000E2
__Hintentry                 intentry     000000
__Hintret                   intret       000000
__Hintsave_regs             intsave_regs 000000
__Hirdata                   irdata       000000
__Hmediumconst              mediumconst  000000
__HnvFARRAM                 nvFARRAM     000000
__Hnvbit                    nvbit        000000
__Hnvrram                   nvrram       000000
__Hparam                    rparam       000000
__Hpowerup                  powerup      0000E2
__Hram                      ram          000000
__Hramtop                   ramtop       000600
__Hrbit                     rbit         000000
__Hrbss                     rbss         000000
__Hrdata                    rdata        000000
__Hreset_vec                reset_vec    000004
__Hrparam                   rparam       000000
__Hsfr                      sfr          000000
__Hsmallconst               smallconst   000610
__Hspace_0                  (abs)        30000E
__Hspace_1                  (abs)        0000A0
__Hspace_2                  (abs)        000000
__Hstack                    stack        000000
__Hstruct                   struct       000000
__Htemp                     temp         00002C
__Htext                     text         000000
__Htext0                    text0        000000
__Htext1                    text1        000000
__Htext10                   text10       000000
__Htext11                   text11       000000
__Htext12                   text12       000000
__Htext14                   text14       000000
__Htext15                   text15       000000
__Htext2                    text2        000000
__Htext3                    text3        000000
__Htext4                    text4        000000
__Htext5                    text5        000000
__Htext6                    text6        000000
__Htext7                    text7        000000
__Htext8                    text8        000000
__Htext9                    text9        000000
__LRAM                      (abs)        000001
__Labs1                     abs1         000000
__Lbank0                    bank0        000000
__Lbank1                    bank1        000000
__Lbank2                    bank2        000000
__Lbank3                    bank3        000000
__Lbank4                    bank4        000000
__Lbank5                    bank5        000000
__Lbigbss                   bigbss       000000
__Lbigdata                  bigdata      000000
__Lbigram                   bigram       000000
__Lbss                      bss          000000
__LbssCOMRAM                bssCOMRAM    000000
__Lcinit                    cinit        000000
__Lclrtext                  clrtext      000000
__Lcomram                   comram       000000
__Lconfig                   config       300000
__Lconst                    const        000000
__LcstackCOMRAM             cstackCOMRAM 000000
__Ldata                     data         000000
__LdataBANK0                dataBANK0    000000
__Leeprom_data              eeprom_data  000000
__Lend_init                 end_init     0000E2
__Lfarbss                   farbss       000000
__Lfardata                  fardata      000000
__Libigdata                 ibigdata     000000
__Lidata                    idata        000000
__LidataBANK0               idataBANK0   000000
__Lidloc                    idloc        200000
__Lifardata                 ifardata     000000
__Linit                     init         0000E2
__Lintcode                  intcode      000008
__Lintcode_body             intcode_body 000000
__Lintcodelo                intcodelo    0000E2
__Lintentry                 intentry     000000
__Lintret                   intret       000000
__Lintsave_regs             intsave_regs 000000
__Lirdata                   irdata       000000
__Lmediumconst              mediumconst  000000
__LnvFARRAM                 nvFARRAM     000000
__Lnvbit                    nvbit        000000
__Lnvrram                   nvrram       000000
__Lparam                    rparam       000000
__Lpowerup                  powerup      0000E2
__Lram                      ram          000000
__Lramtop                   ramtop       000600
__Lrbit                     rbit         000000
__Lrbss                     rbss         000000
__Lrdata                    rdata        000000
__Lreset_vec                reset_vec    000000
__Lrparam                   rparam       000000
__Lsfr                      sfr          000000
__Lsmallconst               smallconst   000600
__Lspace_0                  (abs)        000000
__Lspace_1                  (abs)        000000
__Lspace_2                  (abs)        000000
__Lstack                    stack        000000
__Lstruct                   struct       000000
__Ltemp                     temp         00002B
__Ltext                     text         000000
__Ltext0                    text0        000000
__Ltext1                    text1        000000
__Ltext10                   text10       000000
__Ltext11                   text11       000000
__Ltext12                   text12       000000
__Ltext14                   text14       000000
__Ltext15                   text15       000000
__Ltext2                    text2        000000
__Ltext3                    text3        000000
__Ltext4                    text4        000000
__Ltext5                    text5        000000
__Ltext6                    text6        000000
__Ltext7                    text7        000000
__Ltext8                    text8        000000
__Ltext9                    text9        000000
__S0                        (abs)        30000E
__S1                        (abs)        0000A0
__S2                        (abs)        000000
___cgram                    dataBANK0    000060
___inthi_sp                 stack        000000
___intlo_sp                 stack        000000
___lwdiv                    text7        00071A
___lwdiv@counter            cstackCOMRAM 000017
___lwdiv@dividend           cstackCOMRAM 000011
___lwdiv@divisor            cstackCOMRAM 000013
___lwdiv@quotient           cstackCOMRAM 000015
___param_bank               (abs)        000010
___rparam_used              (abs)        000001
___sp                       stack        000000
__accesstop                 (abs)        000060
__activetblptr              (abs)        000002
__end_of_LCDBusyLoop        text12       00082C
__end_of_LCDByte            text11       0007EC
__end_of_LCDInit            text10       00071A
__end_of_LCDWriteString     text9        00069E
__end_of_MotorInit          text8        0009CC
__end_of_ReadPWMMotorLeft   text15       0009C6
__end_of_ReadPWMMotorRight  text14       0009BC
__end_of_SetMotorLeft       text4        000918
__end_of_SetMotorRight      text2        0008DE
__end_of_SetPWMMotorLeft    text6        00096C
__end_of_SetPWMMotorRight   text3        000942
__end_of_TimerPWMInit       text1        0009B2
__end_of___lwdiv            text7        00076C
__end_of__initialization    cinit        000896
__end_of_abs                text5        000994
__end_of_isr                intcode      0000E2
__end_of_main               text0        00086A
__initialization            cinit        00086A
__mediumconst               mediumconst  000000
__pbssCOMRAM                bssCOMRAM    00001C
__pcinit                    cinit        00086A
__pcstackCOMRAM             cstackCOMRAM 000001
__pdataBANK0                dataBANK0    000060
__pidataBANK0               idataBANK0   00076C
__pintcode                  intcode      000008
__psmallconst               smallconst   000600
__ptext0                    text0        00082C
__ptext1                    text1        000994
__ptext10                   text10       00069E
__ptext11                   text11       0007AC
__ptext12                   text12       0007EC
__ptext14                   text14       0009B2
__ptext15                   text15       0009BC
__ptext2                    text2        0008A4
__ptext3                    text3        000918
__ptext4                    text4        0008DE
__ptext5                    text5        00096C
__ptext6                    text6        000942
__ptext7                    text7        00071A
__ptext8                    text8        0009C6
__ptext9                    text9        000610
__ramtop                    ramtop       000600
__size_of_LCDBusyLoop       (abs)        000000
__size_of_LCDByte           (abs)        000000
__size_of_LCDInit           (abs)        000000
__size_of_LCDWriteString    (abs)        000000
__size_of_MotorInit         (abs)        000000
__size_of_ReadPWMMotorLeft  (abs)        000000
__size_of_ReadPWMMotorRight (abs)        000000
__size_of_SetMotorLeft      (abs)        000000
__size_of_SetMotorRight     (abs)        000000
__size_of_SetPWMMotorLeft   (abs)        000000
__size_of_SetPWMMotorRight  (abs)        000000
__size_of_TimerPWMInit      (abs)        000000
__size_of___lwdiv           (abs)        000000
__size_of_abs               (abs)        000000
__size_of_isr               (abs)        000000
__size_of_main              (abs)        000000
__smallconst                smallconst   000600
_abs                        text5        00096C
_isr                        intcode      000008
_main                       text0        00082C
abs@a                       cstackCOMRAM 000011
btemp                       temp         00002B
end_of_initialization       cinit        000896
int$flags                   temp         00002B
intlevel0                   text         000000
intlevel1                   text         000000
intlevel2                   text         000000
intlevel3                   text         000000
isr@PWMLeft                 bssCOMRAM    000025
isr@PWMRight                bssCOMRAM    000027
isr@iteration               bssCOMRAM    000029
stackhi                     (abs)        0005FF
stacklo                     (abs)        0000A0
start                       init         0000E2
start_initialization        cinit        00086A


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 7 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_LCDByte
		_LCDInit
		_LCDWriteString
		_MotorInit
		_SetMotorLeft
		_SetMotorRight
		_TimerPWMInit
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _TimerPWMInit *****************
 Defined at:
		line 14 in file "TimerPWM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SetMotorRight *****************
 Defined at:
		line 47 in file "motors.c"
 Parameters:    Size  Location     Type
  speed           2   25[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_SetPWMMotorRight
		_abs
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SetPWMMotorRight *****************
 Defined at:
		line 34 in file "TimerPWM.c"
 Parameters:    Size  Location     Type
  percentage      2   23[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lwdiv
 This function is called by:
		_SetMotorRight
 This function uses a non-reentrant model


 *************** function _SetMotorLeft *****************
 Defined at:
		line 27 in file "motors.c"
 Parameters:    Size  Location     Type
  speed           2   25[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_SetPWMMotorLeft
		_abs
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _abs *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\abs.c"
 Parameters:    Size  Location     Type
  a               2   16[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   16[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SetMotorLeft
		_SetMotorRight
 This function uses a non-reentrant model


 *************** function _SetPWMMotorLeft *****************
 Defined at:
		line 30 in file "TimerPWM.c"
 Parameters:    Size  Location     Type
  percentage      2   23[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lwdiv
 This function is called by:
		_SetMotorLeft
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   16[COMRAM] unsigned int 
  divisor         2   18[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2   20[COMRAM] unsigned int 
  counter         1   22[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   16[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_SetPWMMotorLeft
		_SetPWMMotorRight
 This function uses a non-reentrant model


 *************** function _MotorInit *****************
 Defined at:
		line 23 in file "motors.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDWriteString *****************
 Defined at:
		line 254 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  msg             2   24[COMRAM] PTR const unsigned char 
		 -> STR_1(14), 
 Auto vars:     Size  Location     Type
  cc              1   26[COMRAM] char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCDByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDInit *****************
 Defined at:
		line 196 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  style           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  style           1   25[COMRAM] unsigned char 
  __i             1   26[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_LCDBusyLoop
		_LCDByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCDByte *****************
 Defined at:
		line 83 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
  isdata          1   19[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  c               1   22[COMRAM] unsigned char 
  temp            1   23[COMRAM] unsigned char 
  ln              1   21[COMRAM] unsigned char 
  hn              1   20[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         1       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCDBusyLoop
 This function is called by:
		_main
		_LCDInit
		_LCDWriteString
		_LCDWriteInt
		_LCDGotoXY
 This function uses a non-reentrant model


 *************** function _LCDBusyLoop *****************
 Defined at:
		line 138 in file "lcd_hd44780_pic16.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  status          1   18[COMRAM] unsigned char 
  temp            1   17[COMRAM] unsigned char 
  busy            1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_LCDByte
		_LCDInit
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 8 in file "interrupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  dutyCycle       4    0        long 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:         14       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_ReadPWMMotorLeft
		_ReadPWMMotorRight
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _ReadPWMMotorRight *****************
 Defined at:
		line 38 in file "TimerPWM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _ReadPWMMotorLeft *****************
 Defined at:
		line 42 in file "TimerPWM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
motors.c
		_SetMotorLeft  		CODE           	08DE	0000	59
		_MotorInit     		CODE           	09C6	0000	7
		_SetMotorRight 		CODE           	08A4	0000	59

motors.c estimated size: 125

interrupts.c
		_isr           		CODE           	0008	0000	219

interrupts.c estimated size: 219

TimerPWM.c
		_SetPWMMotorRight		CODE           	0918	0000	43
		_TimerPWMInit  		CODE           	0994	0000	31
		_ReadPWMMotorLeft		CODE           	09BC	0000	11
		_ReadPWMMotorRight		CODE           	09B2	0000	11
		_SetPWMMotorLeft		CODE           	0942	0000	43

TimerPWM.c estimated size: 139

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\abs.c
		_abs           		CODE           	096C	0000	41

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\abs.c estimated size: 41

shared
		__initialization		CODE           	086A	0000	45

shared estimated size: 45

lcd_hd44780_pic16.c
		_LCDByte       		CODE           	07AC	0000	65
		_LCDInit       		CODE           	069E	0000	125
		_LCDWriteString		CODE           	0610	0000	143
		_LCDBusyLoop   		CODE           	07EC	0000	65

lcd_hd44780_pic16.c estimated size: 398

main.c
		_main          		CODE           	082C	0000	63

main.c estimated size: 63

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c
		___lwdiv       		CODE           	071A	0000	83

C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c estimated size: 83

